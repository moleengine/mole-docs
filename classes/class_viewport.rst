.. Generated automatically by doc/tools/makerst.py in Mole's source tree.
.. DO NOT EDIT THIS FILE, but the doc/base/classes.xml source instead.

.. _class_Viewport:

Viewport
========

**Inherits:** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Creates a sub-view into the screen.

Member Functions
----------------

+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`World<class_world>`                              | :ref:`find_world<class_Viewport_find_world>`  **(** **)** const                                                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`World2D<class_world2d>`                          | :ref:`find_world_2d<class_Viewport_find_world_2d>`  **(** **)** const                                                                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Camera<class_camera>`                            | :ref:`get_camera<class_Viewport_get_camera>`  **(** **)** const                                                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Matrix32<class_matrix32>`                        | :ref:`get_canvas_transform<class_Viewport_get_canvas_transform>`  **(** **)** const                                                                                                                             |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Matrix32<class_matrix32>`                        | :ref:`get_final_transform<class_Viewport_get_final_transform>`  **(** **)** const                                                                                                                               |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Matrix32<class_matrix32>`                        | :ref:`get_global_canvas_transform<class_Viewport_get_global_canvas_transform>`  **(** **)** const                                                                                                               |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`                          | :ref:`get_mouse_pos<class_Viewport_get_mouse_pos>`  **(** **)** const                                                                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`get_physics_object_picking<class_Viewport_get_physics_object_picking>`  **(** **)**                                                                                                                       |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_rect2>`                              | :ref:`get_rect<class_Viewport_get_rect>`  **(** **)** const                                                                                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`get_render_target_clear_on_new_frame<class_Viewport_get_render_target_clear_on_new_frame>`  **(** **)** const                                                                                             |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`get_render_target_filter<class_Viewport_get_render_target_filter>`  **(** **)** const                                                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`get_render_target_gen_mipmaps<class_Viewport_get_render_target_gen_mipmaps>`  **(** **)** const                                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RenderTargetTexture<class_rendertargettexture>`  | :ref:`get_render_target_texture<class_Viewport_get_render_target_texture>`  **(** **)** const                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                  | :ref:`get_render_target_update_mode<class_Viewport_get_render_target_update_mode>`  **(** **)** const                                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`get_render_target_vflip<class_Viewport_get_render_target_vflip>`  **(** **)** const                                                                                                                       |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_image>`                              | :ref:`get_screen_capture<class_Viewport_get_screen_capture>`  **(** **)** const                                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`                          | :ref:`get_size_override<class_Viewport_get_size_override>`  **(** **)** const                                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                  | :ref:`get_viewport<class_Viewport_get_viewport>`  **(** **)** const                                                                                                                                             |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_rect2>`                              | :ref:`get_visible_rect<class_Viewport_get_visible_rect>`  **(** **)** const                                                                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`World<class_world>`                              | :ref:`get_world<class_Viewport_get_world>`  **(** **)** const                                                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`World2D<class_world2d>`                          | :ref:`get_world_2d<class_Viewport_get_world_2d>`  **(** **)** const                                                                                                                                             |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                          | :ref:`gui_get_drag_data<class_Viewport_gui_get_drag_data>`  **(** **)** const                                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`gui_has_modal_stack<class_Viewport_gui_has_modal_stack>`  **(** **)** const                                                                                                                               |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`has_transparent_background<class_Viewport_has_transparent_background>`  **(** **)** const                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`input<class_Viewport_input>`  **(** :ref:`InputEvent<class_inputevent>` local_event  **)**                                                                                                                |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_audio_listener<class_Viewport_is_audio_listener>`  **(** **)** const                                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_audio_listener_2d<class_Viewport_is_audio_listener_2d>`  **(** **)** const                                                                                                                             |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_input_disabled<class_Viewport_is_input_disabled>`  **(** **)** const                                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_set_as_render_target<class_Viewport_is_set_as_render_target>`  **(** **)** const                                                                                                                       |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_size_override_enabled<class_Viewport_is_size_override_enabled>`  **(** **)** const                                                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_size_override_stretch_enabled<class_Viewport_is_size_override_stretch_enabled>`  **(** **)** const                                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`is_using_own_world<class_Viewport_is_using_own_world>`  **(** **)** const                                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`queue_screen_capture<class_Viewport_queue_screen_capture>`  **(** **)**                                                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`render_target_clear<class_Viewport_render_target_clear>`  **(** **)**                                                                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_as_audio_listener<class_Viewport_set_as_audio_listener>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_as_audio_listener_2d<class_Viewport_set_as_audio_listener_2d>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_as_render_target<class_Viewport_set_as_render_target>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_canvas_transform<class_Viewport_set_canvas_transform>`  **(** :ref:`Matrix32<class_matrix32>` xform  **)**                                                                                            |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_disable_input<class_Viewport_set_disable_input>`  **(** :ref:`bool<class_bool>` disable  **)**                                                                                                        |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_global_canvas_transform<class_Viewport_set_global_canvas_transform>`  **(** :ref:`Matrix32<class_matrix32>` xform  **)**                                                                              |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_physics_object_picking<class_Viewport_set_physics_object_picking>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                       |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_rect<class_Viewport_set_rect>`  **(** :ref:`Rect2<class_rect2>` rect  **)**                                                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_render_target_clear_on_new_frame<class_Viewport_set_render_target_clear_on_new_frame>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                   |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_render_target_filter<class_Viewport_set_render_target_filter>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_render_target_gen_mipmaps<class_Viewport_set_render_target_gen_mipmaps>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_render_target_to_screen_rect<class_Viewport_set_render_target_to_screen_rect>`  **(** :ref:`Rect2<class_rect2>` rect  **)**                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_render_target_update_mode<class_Viewport_set_render_target_update_mode>`  **(** :ref:`int<class_int>` mode  **)**                                                                                     |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_render_target_vflip<class_Viewport_set_render_target_vflip>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                             |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_size_override<class_Viewport_set_size_override>`  **(** :ref:`bool<class_bool>` enable, :ref:`Vector2<class_vector2>` size=Vector2(-1, -1), :ref:`Vector2<class_vector2>` margin=Vector2(0, 0)  **)** |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_size_override_stretch<class_Viewport_set_size_override_stretch>`  **(** :ref:`bool<class_bool>` enabled  **)**                                                                                        |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_transparent_background<class_Viewport_set_transparent_background>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                       |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_use_own_world<class_Viewport_set_use_own_world>`  **(** :ref:`bool<class_bool>` enable  **)**                                                                                                         |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_world<class_Viewport_set_world>`  **(** :ref:`World<class_world>` world  **)**                                                                                                                        |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`set_world_2d<class_Viewport_set_world_2d>`  **(** :ref:`World2D<class_world2d>` world_2d  **)**                                                                                                           |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`unhandled_input<class_Viewport_unhandled_input>`  **(** :ref:`InputEvent<class_inputevent>` local_event  **)**                                                                                            |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`update_worlds<class_Viewport_update_worlds>`  **(** **)**                                                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                   | :ref:`warp_mouse<class_Viewport_warp_mouse>`  **(** :ref:`Vector2<class_vector2>` to_pos  **)**                                                                                                                 |
+--------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

-  **size_changed**  **(** **)**
Emitted when the size of the viewport is changed, whether by :ref:`set_size_override<class_Viewport_set_size_override>`, resize of window, or some other means.


Numeric Constants
-----------------

- **RENDER_TARGET_UPDATE_DISABLED** = **0** --- Do not update the render target.
- **RENDER_TARGET_UPDATE_ONCE** = **1** --- Update the render target once, then switch to ``RENDER_TARGET_UPDATE_DISABLED``
- **RENDER_TARGET_UPDATE_WHEN_VISIBLE** = **2** --- Update the render target only when it is visible. This is the default value.
- **RENDER_TARGET_UPDATE_ALWAYS** = **3** --- Update the render target always.

Description
-----------

A Viewport creates a different view into the screen, or a sub-view inside another viewport. Children 2D Nodes will display on it, and children Camera 3D nodes will render on it too.

Optionally, a viewport can have its own 2D or 3D world, so they don't share what they draw with other viewports.

If a viewport is a child of a :ref:`Control<class_control>`, it will automatically take up its same rect and position, otherwise they must be set manually.

Viewports can also choose to be audio listeners, so they generate positional audio depending on a 2D or 3D camera child of it.

Also, viewports can be assigned to different screens in case the devices have multiple screens.

Finally, viewports can also behave as render targets, in which case they will not be visible unless the associated texture is used to draw.

Member Function Description
---------------------------

.. _class_Viewport_find_world:

- :ref:`World<class_world>`  **find_world**  **(** **)** const

Return the 3D world of the viewport, or if no such present, the one of the parent viewport.

.. _class_Viewport_find_world_2d:

- :ref:`World2D<class_world2d>`  **find_world_2d**  **(** **)** const

Return the 2D world of the viewport.

.. _class_Viewport_get_camera:

- :ref:`Camera<class_camera>`  **get_camera**  **(** **)** const

Return the active 3D camera.

.. _class_Viewport_get_canvas_transform:

- :ref:`Matrix32<class_matrix32>`  **get_canvas_transform**  **(** **)** const

Get the canvas transform of the viewport.

.. _class_Viewport_get_final_transform:

- :ref:`Matrix32<class_matrix32>`  **get_final_transform**  **(** **)** const

Get the total transform of the viewport.

.. _class_Viewport_get_global_canvas_transform:

- :ref:`Matrix32<class_matrix32>`  **get_global_canvas_transform**  **(** **)** const

Get the global canvas transform of the viewport.

.. _class_Viewport_get_mouse_pos:

- :ref:`Vector2<class_vector2>`  **get_mouse_pos**  **(** **)** const

Get the mouse position, relative to the viewport.

.. _class_Viewport_get_physics_object_picking:

- :ref:`bool<class_bool>`  **get_physics_object_picking**  **(** **)**

Get whether picking for all physics objects inside the viewport is enabled.

.. _class_Viewport_get_rect:

- :ref:`Rect2<class_rect2>`  **get_rect**  **(** **)** const

Return the viewport rect. If the viewport is child of a control, it will use the same rect as the parent. Otherwise, if the rect is empty, the viewport will use all the allowed space.

.. _class_Viewport_get_render_target_clear_on_new_frame:

- :ref:`bool<class_bool>`  **get_render_target_clear_on_new_frame**  **(** **)** const

Return whether automatic clearing of the render target on each frame is enabled.

.. _class_Viewport_get_render_target_filter:

- :ref:`bool<class_bool>`  **get_render_target_filter**  **(** **)** const

Get whether the rendered texture has filters enabled.

.. _class_Viewport_get_render_target_gen_mipmaps:

- :ref:`bool<class_bool>`  **get_render_target_gen_mipmaps**  **(** **)** const

Get whether the rendered texture will have mipmaps generated.

.. _class_Viewport_get_render_target_texture:

- :ref:`RenderTargetTexture<class_rendertargettexture>`  **get_render_target_texture**  **(** **)** const

Get the render target's texture, for use with various objects that you want to texture with the viewport.

.. _class_Viewport_get_render_target_update_mode:

- :ref:`int<class_int>`  **get_render_target_update_mode**  **(** **)** const

Get when the render target would be updated, will be one of the ``RENDER_TARGET_UPDATE\_\*`` constants.

.. _class_Viewport_get_render_target_vflip:

- :ref:`bool<class_bool>`  **get_render_target_vflip**  **(** **)** const

Set whether the render target is flipped on the Y axis.

.. _class_Viewport_get_screen_capture:

- :ref:`Image<class_image>`  **get_screen_capture**  **(** **)** const

Return the captured screenshot after :ref:`queue_screen_capture<class_Viewport_queue_screen_capture>`. You might need to check more than one frame untill the right image is returned.

.. _class_Viewport_get_size_override:

- :ref:`Vector2<class_vector2>`  **get_size_override**  **(** **)** const

Get the size override set with :ref:`set_size_override<class_Viewport_set_size_override>`.

.. _class_Viewport_get_viewport:

- :ref:`RID<class_rid>`  **get_viewport**  **(** **)** const

Get the viewport RID from the visual server.

.. _class_Viewport_get_visible_rect:

- :ref:`Rect2<class_rect2>`  **get_visible_rect**  **(** **)** const

Return the final, visible rect in global screen coordinates.

.. _class_Viewport_get_world:

- :ref:`World<class_world>`  **get_world**  **(** **)** const

Return the 3D world of the viewport.

.. _class_Viewport_get_world_2d:

- :ref:`World2D<class_world2d>`  **get_world_2d**  **(** **)** const

.. _class_Viewport_gui_get_drag_data:

- :ref:`Variant<class_variant>`  **gui_get_drag_data**  **(** **)** const

Returs the drag data from the GUI, that was previously returned by :ref:`Control.get_drag_data<class_Control_get_drag_data>`.

.. _class_Viewport_gui_has_modal_stack:

- :ref:`bool<class_bool>`  **gui_has_modal_stack**  **(** **)** const

Returs whether there are shown modals on-screen.

.. _class_Viewport_has_transparent_background:

- :ref:`bool<class_bool>`  **has_transparent_background**  **(** **)** const

Return whether the viewport lets whatever is behind it to show.

.. _class_Viewport_input:

- void  **input**  **(** :ref:`InputEvent<class_inputevent>` local_event  **)**

.. _class_Viewport_is_audio_listener:

- :ref:`bool<class_bool>`  **is_audio_listener**  **(** **)** const

Returns whether the viewport sends sounds to the speakers.

.. _class_Viewport_is_audio_listener_2d:

- :ref:`bool<class_bool>`  **is_audio_listener_2d**  **(** **)** const

Returns whether the viewport sends soundsfrom 2D emitters to the speakers.

.. _class_Viewport_is_input_disabled:

- :ref:`bool<class_bool>`  **is_input_disabled**  **(** **)** const

Return whether input to the viewport is disabled.

.. _class_Viewport_is_set_as_render_target:

- :ref:`bool<class_bool>`  **is_set_as_render_target**  **(** **)** const

Return whether the viewport is set as a render target by :ref:`set_as_render_target<class_Viewport_set_as_render_target>`.

.. _class_Viewport_is_size_override_enabled:

- :ref:`bool<class_bool>`  **is_size_override_enabled**  **(** **)** const

Get the enabled status of the size override set with :ref:`set_size_override<class_Viewport_set_size_override>`.

.. _class_Viewport_is_size_override_stretch_enabled:

- :ref:`bool<class_bool>`  **is_size_override_stretch_enabled**  **(** **)** const

Get the enabled status of the size strech override set with :ref:`set_size_override_stretch<class_Viewport_set_size_override_stretch>`.

.. _class_Viewport_is_using_own_world:

- :ref:`bool<class_bool>`  **is_using_own_world**  **(** **)** const

Return whether the viewport is using a world separate from the parent viewport's world.

.. _class_Viewport_queue_screen_capture:

- void  **queue_screen_capture**  **(** **)**

Queue a multithreaded screenshot, you can retrive it at a later frame via :ref:`get_screen_capture<class_Viewport_get_screen_capture>`.

.. _class_Viewport_render_target_clear:

- void  **render_target_clear**  **(** **)**

Clear the render target manually.

.. _class_Viewport_set_as_audio_listener:

- void  **set_as_audio_listener**  **(** :ref:`bool<class_bool>` enable  **)**

Makes the viewport send sounds to the speakers.

.. _class_Viewport_set_as_audio_listener_2d:

- void  **set_as_audio_listener_2d**  **(** :ref:`bool<class_bool>` enable  **)**

Makes the viewport send sounds from 2D emitters to the speakers.

.. _class_Viewport_set_as_render_target:

- void  **set_as_render_target**  **(** :ref:`bool<class_bool>` enable  **)**

Set the viewport's render target mode.

.. _class_Viewport_set_canvas_transform:

- void  **set_canvas_transform**  **(** :ref:`Matrix32<class_matrix32>` xform  **)**

Set the canvas transform of the viewport, useful for changing the on-screen positions of all child :ref:`CanvasItem<class_canvasitem>`\ s. This is relative to the global canvas transform of the viewport.

.. _class_Viewport_set_disable_input:

- void  **set_disable_input**  **(** :ref:`bool<class_bool>` disable  **)**

Set whether input to the viewport is disabled.

.. _class_Viewport_set_global_canvas_transform:

- void  **set_global_canvas_transform**  **(** :ref:`Matrix32<class_matrix32>` xform  **)**

Set the global canvas transform of the viewport. The canvas transform is relative to this.

.. _class_Viewport_set_physics_object_picking:

- void  **set_physics_object_picking**  **(** :ref:`bool<class_bool>` enable  **)**

Enable/disable picking for all physics objects inside the viewport.

.. _class_Viewport_set_rect:

- void  **set_rect**  **(** :ref:`Rect2<class_rect2>` rect  **)**

Set the viewport rect. If the viewport is child of a control, it will use the same rect as the parent.

.. _class_Viewport_set_render_target_clear_on_new_frame:

- void  **set_render_target_clear_on_new_frame**  **(** :ref:`bool<class_bool>` enable  **)**

Enable/disable automatic clearing of the render target on each frame. You might find it better to disable this if you are using the viewport for rarely updated textures. To clear manually, check :ref:`render_target_clear<class_Viewport_render_target_clear>`

.. _class_Viewport_set_render_target_filter:

- void  **set_render_target_filter**  **(** :ref:`bool<class_bool>` enable  **)**

Set whether the rendered texture should have filters enabled. Disable if you want the texture's pixels be visible.

.. _class_Viewport_set_render_target_gen_mipmaps:

- void  **set_render_target_gen_mipmaps**  **(** :ref:`bool<class_bool>` enable  **)**

Set whether the rendered texture should have mipmaps generated. Mipmaps allow the texture to have better antialiasing from far away.

.. _class_Viewport_set_render_target_to_screen_rect:

- void  **set_render_target_to_screen_rect**  **(** :ref:`Rect2<class_rect2>` rect  **)**

Map a part of the screen to the render target directly.

.. _class_Viewport_set_render_target_update_mode:

- void  **set_render_target_update_mode**  **(** :ref:`int<class_int>` mode  **)**

Set when the render target should be updated, has to be one of the ``RENDER_TARGET_UPDATE\_\*`` constants.

.. _class_Viewport_set_render_target_vflip:

- void  **set_render_target_vflip**  **(** :ref:`bool<class_bool>` enable  **)**

Set whether the render target should be flipped on the Y axis.

.. _class_Viewport_set_size_override:

- void  **set_size_override**  **(** :ref:`bool<class_bool>` enable, :ref:`Vector2<class_vector2>` size=Vector2(-1, -1), :ref:`Vector2<class_vector2>` margin=Vector2(0, 0)  **)**

Set the size of the viewport. If the enable parameter is true, it would use the override, otherwise it would use the default size. If the size parameter is equal to ``(-1, -1)``, it won't update the size.

.. _class_Viewport_set_size_override_stretch:

- void  **set_size_override_stretch**  **(** :ref:`bool<class_bool>` enabled  **)**

Set whether the size override affects stretch as well.

.. _class_Viewport_set_transparent_background:

- void  **set_transparent_background**  **(** :ref:`bool<class_bool>` enable  **)**

If this viewport is a child of another viewport, keep the previously drawn background visible.

.. _class_Viewport_set_use_own_world:

- void  **set_use_own_world**  **(** :ref:`bool<class_bool>` enable  **)**

Make the viewport use a world separate from the parent viewport's world.

.. _class_Viewport_set_world:

- void  **set_world**  **(** :ref:`World<class_world>` world  **)**

Change the 3D world of the viewport.

.. _class_Viewport_set_world_2d:

- void  **set_world_2d**  **(** :ref:`World2D<class_world2d>` world_2d  **)**

.. _class_Viewport_unhandled_input:

- void  **unhandled_input**  **(** :ref:`InputEvent<class_inputevent>` local_event  **)**

.. _class_Viewport_update_worlds:

- void  **update_worlds**  **(** **)**

Force update of the 2D and 3D worlds.

.. _class_Viewport_warp_mouse:

- void  **warp_mouse**  **(** :ref:`Vector2<class_vector2>` to_pos  **)**

Warp the mouse to a position, relative to the viewport.


