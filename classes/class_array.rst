.. Generated automatically by doc/tools/makerst.py in Mole's source tree.
.. DO NOT EDIT THIS FILE, but the doc/base/classes.xml source instead.

.. _class_Array:

Array
=====

**Category:** Built-In Types

Brief Description
-----------------

Generic array datatype.

Member Functions
----------------

+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`ColorArray<class_colorarray>` from  **)**                                      |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`Vector3Array<class_vector3array>` from  **)**                                  |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`Vector2Array<class_vector2array>` from  **)**                                  |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`StringArray<class_stringarray>` from  **)**                                    |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`RealArray<class_realarray>` from  **)**                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`IntArray<class_intarray>` from  **)**                                          |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`  | :ref:`Array<class_Array_Array>`  **(** :ref:`RawArray<class_rawarray>` from  **)**                                          |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`append<class_Array_append>`  **(** var value  **)**                                                                   |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`back<class_Array_back>`  **(** **)**                                                                                  |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`clear<class_Array_clear>`  **(** **)**                                                                                |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`      | :ref:`count<class_Array_count>`  **(** var value  **)**                                                                     |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`    | :ref:`empty<class_Array_empty>`  **(** **)**                                                                                |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`erase<class_Array_erase>`  **(** var value  **)**                                                                     |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`      | :ref:`find<class_Array_find>`  **(** var what, :ref:`int<class_int>` from=0  **)**                                          |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`      | :ref:`find_last<class_Array_find_last>`  **(** var value  **)**                                                             |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`front<class_Array_front>`  **(** **)**                                                                                |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`    | :ref:`has<class_Array_has>`  **(** var value  **)**                                                                         |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`      | :ref:`hash<class_Array_hash>`  **(** **)**                                                                                  |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`insert<class_Array_insert>`  **(** :ref:`int<class_int>` pos, var value  **)**                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`invert<class_Array_invert>`  **(** **)**                                                                              |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`    | :ref:`is_shared<class_Array_is_shared>`  **(** **)**                                                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`pop_back<class_Array_pop_back>`  **(** **)**                                                                          |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`pop_front<class_Array_pop_front>`  **(** **)**                                                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`push_back<class_Array_push_back>`  **(** var value  **)**                                                             |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`push_front<class_Array_push_front>`  **(** var value  **)**                                                           |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`remove<class_Array_remove>`  **(** :ref:`int<class_int>` pos  **)**                                                   |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`resize<class_Array_resize>`  **(** :ref:`int<class_int>` pos  **)**                                                   |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`      | :ref:`rfind<class_Array_rfind>`  **(** var what, :ref:`int<class_int>` from=-1  **)**                                       |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`      | :ref:`size<class_Array_size>`  **(** **)**                                                                                  |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`sort<class_Array_sort>`  **(** **)**                                                                                  |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                       | :ref:`sort_custom<class_Array_sort_custom>`  **(** :ref:`Object<class_object>` obj, :ref:`String<class_string>` func  **)** |
+----------------------------+-----------------------------------------------------------------------------------------------------------------------------+

Description
-----------

Generic array, contains several elements of any type, accessible by numerical index starting at 0. Negative indices can be used to count from the right, like in Python. Arrays are always passed by reference.

Member Function Description
---------------------------

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`ColorArray<class_colorarray>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`Vector3Array<class_vector3array>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`Vector2Array<class_vector2array>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`StringArray<class_stringarray>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`RealArray<class_realarray>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`IntArray<class_intarray>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_Array:

- :ref:`Array<class_array>`  **Array**  **(** :ref:`RawArray<class_rawarray>` from  **)**

Construct an array from a :ref:`RawArray<class_rawarray>`.

.. _class_Array_append:

- void  **append**  **(** var value  **)**

Append an element at the end of the array (alias of :ref:`push_back<class_Array_push_back>`).

.. _class_Array_back:

- void  **back**  **(** **)**

Returns the last element of the array if the array is not empty (size>0).

.. _class_Array_clear:

- void  **clear**  **(** **)**

Clear the array (resize to 0).

.. _class_Array_count:

- :ref:`int<class_int>`  **count**  **(** var value  **)**

Return the amount of times an element is in the array.

.. _class_Array_empty:

- :ref:`bool<class_bool>`  **empty**  **(** **)**

Return true if the array is empty (size==0).

.. _class_Array_erase:

- void  **erase**  **(** var value  **)**

Remove the first occurrence of a value from the array.

.. _class_Array_find:

- :ref:`int<class_int>`  **find**  **(** var what, :ref:`int<class_int>` from=0  **)**

Searches the array for a value and returns its index or -1 if not found. Optionally, the initial search index can be passed.

.. _class_Array_find_last:

- :ref:`int<class_int>`  **find_last**  **(** var value  **)**

Searches the array in reverse order for a value and returns its index or -1 if not found.

.. _class_Array_front:

- void  **front**  **(** **)**

Returns the first element of the array if the array is not empty (size>0).

.. _class_Array_has:

- :ref:`bool<class_bool>`  **has**  **(** var value  **)**

Return true if the array contains given value.

::

    [ "inside", 7 ].has("inside") == true
    [ "inside", 7 ].has("outside") == false
    [ "inside", 7 ].has(7) == true
    [ "inside", 7 ].has("7") == false

.. _class_Array_hash:

- :ref:`int<class_int>`  **hash**  **(** **)**

Return a hashed integer value representing the array contents.

.. _class_Array_insert:

- void  **insert**  **(** :ref:`int<class_int>` pos, var value  **)**

Insert a new element at a given position in the array. The position must be valid, or at the end of the array (pos==size()).

.. _class_Array_invert:

- void  **invert**  **(** **)**

Reverse the order of the elements in the array (so first element will now be the last).

.. _class_Array_is_shared:

- :ref:`bool<class_bool>`  **is_shared**  **(** **)**

Get whether this is a shared array instance.

.. _class_Array_pop_back:

- void  **pop_back**  **(** **)**

Remove the last element of the array.

.. _class_Array_pop_front:

- void  **pop_front**  **(** **)**

Remove the first element of the array.

.. _class_Array_push_back:

- void  **push_back**  **(** var value  **)**

Append an element at the end of the array.

.. _class_Array_push_front:

- void  **push_front**  **(** var value  **)**

Add an element at the beginning of the array.

.. _class_Array_remove:

- void  **remove**  **(** :ref:`int<class_int>` pos  **)**

Remove an element from the array by index.

.. _class_Array_resize:

- void  **resize**  **(** :ref:`int<class_int>` pos  **)**

Resize the array to contain a different number of elements. If the array size is smaller, elements are cleared, if bigger, new elements are Null.

.. _class_Array_rfind:

- :ref:`int<class_int>`  **rfind**  **(** var what, :ref:`int<class_int>` from=-1  **)**

Searches the array in reverse order. Optionally, a start search index can be passed. If negative, the start index is considered relative to the end of the array.

.. _class_Array_size:

- :ref:`int<class_int>`  **size**  **(** **)**

Return the amount of elements in the array.

.. _class_Array_sort:

- void  **sort**  **(** **)**

Sort the array using natural order.

.. _class_Array_sort_custom:

- void  **sort_custom**  **(** :ref:`Object<class_object>` obj, :ref:`String<class_string>` func  **)**

Sort the array using a custom method. The arguments are an object that holds the method and the name of such method. The custom method receives two arguments (a pair of elements from the array) and must return true if the first argument is less than the second, and return false otherwise.


